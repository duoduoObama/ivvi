{"version":3,"sources":["node_modules/@delon/cache/fesm2015/cache.js","src/app/routes/delon/acl/acl.component.html","src/app/routes/delon/cache/cache.component.html","src/app/routes/delon/downfile/downfile.component.html","src/app/routes/delon/form/form.component.html","src/app/routes/delon/guard/guard.component.html","src/app/routes/delon/print/print.component.html","src/app/routes/delon/qr/qr.component.html","src/app/routes/delon/st/st.component.html","src/app/routes/delon/util/util.component.html","src/app/routes/delon/xlsx/xlsx.component.html","src/app/routes/delon/zip/zip.component.html","src/app/routes/delon/acl/acl.component.ts","src/app/routes/delon/cache/cache.component.ts","src/app/routes/delon/delon-routing.module.ts","src/app/routes/delon/delon.module.ts","src/app/routes/delon/downfile/downfile.component.ts","src/app/routes/delon/form/form.component.ts","src/app/routes/delon/guard/admin.component.ts","src/app/routes/delon/guard/auth.component.ts","src/app/routes/delon/guard/can-leave.provide.ts","src/app/routes/delon/guard/guard.component.ts","src/app/routes/delon/guard/leave.component.ts","src/app/routes/delon/print/print.component.ts","src/app/routes/delon/qr/qr.component.ts","src/app/routes/delon/st/st.component.ts","src/app/routes/delon/util/util.component.ts","src/app/routes/delon/xlsx/xlsx.component.ts","src/app/routes/delon/zip/zip.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, ɵɵdefineInjectable, InjectionToken, Inject, ɵɵinject, NgModule } from '@angular/core';\nimport addSeconds from 'date-fns/add_seconds';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ICache() { }\nif (false) {\n    /** @type {?} */\n    ICache.prototype.v;\n    /**\n     * 过期时间戳，`0` 表示不过期\n     * @type {?}\n     */\n    ICache.prototype.e;\n}\n/**\n * @record\n */\nfunction ICacheStore() { }\nif (false) {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ICacheStore.prototype.get = function (key) { };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    ICacheStore.prototype.set = function (key, value) { };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ICacheStore.prototype.remove = function (key) { };\n}\n/**\n * @record\n */\nfunction CacheNotifyResult() { }\nif (false) {\n    /** @type {?} */\n    CacheNotifyResult.prototype.type;\n    /** @type {?|undefined} */\n    CacheNotifyResult.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cache.config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DelonCacheConfig {\n    constructor() {\n        /**\n         * Cache mode, default: `promise`\n         * - `promise` Convention mode, allowing `key` to get data as http\n         * - `none` Normal mode\n         */\n        this.mode = 'promise';\n        /**\n         * Rename the return parameters, for example:\n         * - `null` The response body is content\n         * - `list` The response body should be `{ list: [] }`\n         * - `result.list` The response body should be `{ result: { list: [] } }`\n         */\n        this.reName = '';\n        /**\n         * Key prefix of persistent data\n         */\n        this.prefix = '';\n        /**\n         * Key name of persistent data metadata storage\n         */\n        this.meta_key = '__cache_meta';\n    }\n}\nDelonCacheConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ DelonCacheConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function DelonCacheConfig_Factory() { return new DelonCacheConfig(); }, token: DelonCacheConfig, providedIn: \"root\" });\nif (false) {\n    /**\n     * Cache mode, default: `promise`\n     * - `promise` Convention mode, allowing `key` to get data as http\n     * - `none` Normal mode\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.mode;\n    /**\n     * Rename the return parameters, for example:\n     * - `null` The response body is content\n     * - `list` The response body should be `{ list: [] }`\n     * - `result.list` The response body should be `{ result: { list: [] } }`\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.reName;\n    /**\n     * Set the default storage type\n     * - `m` Storage via memory\n     * - `s` Storage via `localStorage`\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.type;\n    /**\n     * Set the default expire time (Unit: second)\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.expire;\n    /**\n     * Key prefix of persistent data\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.prefix;\n    /**\n     * Key name of persistent data metadata storage\n     * @type {?}\n     */\n    DelonCacheConfig.prototype.meta_key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/local-storage-cache.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DC_STORE_STORAGE_TOKEN = new InjectionToken('DC_STORE_STORAGE_TOKEN', {\n    providedIn: 'root',\n    factory: DC_STORE_STORAGE_TOKEN_FACTORY,\n});\n/**\n * @return {?}\n */\nfunction DC_STORE_STORAGE_TOKEN_FACTORY() {\n    return new LocalStorageCacheService();\n}\nclass LocalStorageCacheService {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    get(key) {\n        return JSON.parse(localStorage.getItem(key) || 'null') || null;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n        return true;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    remove(key) {\n        localStorage.removeItem(key);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cache.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CacheService {\n    /**\n     * @param {?} _\n     * @param {?} store\n     * @param {?} http\n     */\n    constructor(_, store, http) {\n        this.store = store;\n        this.http = http;\n        this.memory = new Map();\n        this.notifyBuffer = new Map();\n        this.meta = new Set();\n        this.freqTick = 3000;\n        this.cog = {};\n        Object.assign(this.cog, Object.assign({}, new DelonCacheConfig(), _));\n        this.loadMeta();\n        this.startExpireNotify();\n    }\n    /**\n     * @private\n     * @param {?} obj\n     * @param {?} path\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    deepGet(obj, path, defaultValue) {\n        if (!obj)\n            return defaultValue;\n        if (path.length <= 1) {\n            /** @type {?} */\n            const checkObj = path.length ? obj[path[0]] : obj;\n            return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n        }\n        return path.reduce((/**\n         * @param {?} o\n         * @param {?} k\n         * @return {?}\n         */\n        (o, k) => o[k]), obj) || defaultValue;\n    }\n    // #region meta\n    /**\n     * @private\n     * @param {?} key\n     * @return {?}\n     */\n    pushMeta(key) {\n        if (this.meta.has(key))\n            return;\n        this.meta.add(key);\n        this.saveMeta();\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @return {?}\n     */\n    removeMeta(key) {\n        if (!this.meta.has(key))\n            return;\n        this.meta.delete(key);\n        this.saveMeta();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    loadMeta() {\n        /** @type {?} */\n        const ret = this.store.get((/** @type {?} */ (this.cog.meta_key)));\n        if (ret && ret.v) {\n            ((/** @type {?} */ (ret.v))).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => this.meta.add(key)));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    saveMeta() {\n        /** @type {?} */\n        const metaData = [];\n        this.meta.forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => metaData.push(key)));\n        this.store.set((/** @type {?} */ (this.cog.meta_key)), { v: metaData, e: 0 });\n    }\n    /**\n     * @return {?}\n     */\n    getMeta() {\n        return this.meta;\n    }\n    /**\n     * 缓存对象\n     * @param {?} key\n     * @param {?} data\n     * @param {?=} options\n     * @return {?}\n     */\n    set(key, data, options = {}) {\n        /** @type {?} */\n        let e = 0;\n        const { type, expire } = this.cog;\n        options = Object.assign({ type,\n            expire }, options);\n        if (options.expire) {\n            e = addSeconds(new Date(), options.expire).valueOf();\n        }\n        if (!(data instanceof Observable)) {\n            this.save((/** @type {?} */ (options.type)), key, { v: data, e });\n            return;\n        }\n        return data.pipe(tap((/**\n         * @param {?} v\n         * @return {?}\n         */\n        (v) => {\n            this.save((/** @type {?} */ (options.type)), key, { v, e });\n        })));\n    }\n    /**\n     * @private\n     * @param {?} type\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    save(type, key, value) {\n        if (type === 'm') {\n            this.memory.set(key, value);\n        }\n        else {\n            this.store.set(this.cog.prefix + key, value);\n            this.pushMeta(key);\n        }\n        this.runNotify(key, 'set');\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @return {?}\n     */\n    get(key, options = {}) {\n        /** @type {?} */\n        const isPromise = options.mode !== 'none' && this.cog.mode === 'promise';\n        /** @type {?} */\n        const value = this.memory.has(key) ? ((/** @type {?} */ (this.memory.get(key)))) : this.store.get(this.cog.prefix + key);\n        if (!value || (value.e && value.e > 0 && value.e < new Date().valueOf())) {\n            if (isPromise) {\n                return this.http.get(key).pipe(map((/**\n                 * @param {?} ret\n                 * @return {?}\n                 */\n                (ret) => this.deepGet(ret, (/** @type {?} */ (this.cog.reName)), null))), tap((/**\n                 * @param {?} v\n                 * @return {?}\n                 */\n                v => this.set(key, v, { type: (/** @type {?} */ (options.type)), expire: options.expire }))));\n            }\n            return null;\n        }\n        return isPromise ? of(value.v) : value.v;\n    }\n    /**\n     * 获取缓存数据，若 `key` 不存在或已过期则返回 null\n     * @param {?} key\n     * @return {?}\n     */\n    getNone(key) {\n        return this.get(key, { mode: 'none' });\n    }\n    /**\n     * 获取缓存，若不存在则设置缓存对象\n     * @param {?} key\n     * @param {?} data\n     * @param {?=} options\n     * @return {?}\n     */\n    tryGet(key, data, options = {}) {\n        /** @type {?} */\n        const ret = this.getNone(key);\n        if (ret === null) {\n            if (!(data instanceof Observable)) {\n                this.set(key, data, (/** @type {?} */ (options)));\n                return data;\n            }\n            return this.set(key, (/** @type {?} */ (data)), (/** @type {?} */ (options)));\n        }\n        return of(ret);\n    }\n    // #endregion\n    // #region has\n    /**\n     * 是否缓存 `key`\n     * @param {?} key\n     * @return {?}\n     */\n    has(key) {\n        return this.memory.has(key) || this.meta.has(key);\n    }\n    // #endregion\n    // #region remove\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} needNotify\n     * @return {?}\n     */\n    _remove(key, needNotify) {\n        if (needNotify)\n            this.runNotify(key, 'remove');\n        if (this.memory.has(key)) {\n            this.memory.delete(key);\n            return;\n        }\n        this.store.remove(this.cog.prefix + key);\n        this.removeMeta(key);\n    }\n    /**\n     * 移除缓存\n     * @param {?} key\n     * @return {?}\n     */\n    remove(key) {\n        this._remove(key, true);\n    }\n    /**\n     * 清空所有缓存\n     * @return {?}\n     */\n    clear() {\n        this.notifyBuffer.forEach((/**\n         * @param {?} _v\n         * @param {?} k\n         * @return {?}\n         */\n        (_v, k) => this.runNotify(k, 'remove')));\n        this.memory.clear();\n        this.meta.forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => this.store.remove(this.cog.prefix + key)));\n    }\n    // #endregion\n    // #region notify\n    /**\n     * 设置监听频率，单位：毫秒且最低 `20ms`，默认：`3000ms`\n     * @param {?} value\n     * @return {?}\n     */\n    set freq(value) {\n        this.freqTick = Math.max(20, value);\n        this.abortExpireNotify();\n        this.startExpireNotify();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    startExpireNotify() {\n        this.checkExpireNotify();\n        this.runExpireNotify();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    runExpireNotify() {\n        this.freqTime = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.checkExpireNotify();\n            this.runExpireNotify();\n        }), this.freqTick);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    checkExpireNotify() {\n        /** @type {?} */\n        const removed = [];\n        this.notifyBuffer.forEach((/**\n         * @param {?} _v\n         * @param {?} key\n         * @return {?}\n         */\n        (_v, key) => {\n            if (this.has(key) && this.getNone(key) === null)\n                removed.push(key);\n        }));\n        removed.forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.runNotify(key, 'expire');\n            this._remove(key, false);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    abortExpireNotify() {\n        clearTimeout(this.freqTime);\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} type\n     * @return {?}\n     */\n    runNotify(key, type) {\n        if (!this.notifyBuffer.has(key))\n            return;\n        (/** @type {?} */ (this.notifyBuffer.get(key))).next({ type, value: this.getNone(key) });\n    }\n    /**\n     * `key` 监听，当 `key` 变更、过期、移除时通知，注意以下若干细节：\n     *\n     * - 调用后除再次调用 `cancelNotify` 否则永远不过期\n     * - 监听器每 `freq` (默认：3秒) 执行一次过期检查\n     * @param {?} key\n     * @return {?}\n     */\n    notify(key) {\n        if (!this.notifyBuffer.has(key)) {\n            /** @type {?} */\n            const change$ = new BehaviorSubject(this.getNone(key));\n            this.notifyBuffer.set(key, change$);\n        }\n        return (/** @type {?} */ (this.notifyBuffer.get(key))).asObservable();\n    }\n    /**\n     * 取消 `key` 监听\n     * @param {?} key\n     * @return {?}\n     */\n    cancelNotify(key) {\n        if (!this.notifyBuffer.has(key))\n            return;\n        (/** @type {?} */ (this.notifyBuffer.get(key))).unsubscribe();\n        this.notifyBuffer.delete(key);\n    }\n    /**\n     * `key` 是否已经监听\n     * @param {?} key\n     * @return {?}\n     */\n    hasNotify(key) {\n        return this.notifyBuffer.has(key);\n    }\n    /**\n     * 清空所有 `key` 的监听\n     * @return {?}\n     */\n    clearNotify() {\n        this.notifyBuffer.forEach((/**\n         * @param {?} v\n         * @return {?}\n         */\n        v => v.unsubscribe()));\n        this.notifyBuffer.clear();\n    }\n    // #endregion\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.memory.clear();\n        this.abortExpireNotify();\n        this.clearNotify();\n    }\n}\nCacheService.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nCacheService.ctorParameters = () => [\n    { type: DelonCacheConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [DC_STORE_STORAGE_TOKEN,] }] },\n    { type: HttpClient }\n];\n/** @nocollapse */ CacheService.ngInjectableDef = ɵɵdefineInjectable({ factory: function CacheService_Factory() { return new CacheService(ɵɵinject(DelonCacheConfig), ɵɵinject(DC_STORE_STORAGE_TOKEN), ɵɵinject(HttpClient)); }, token: CacheService, providedIn: \"root\" });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.memory;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.notifyBuffer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.meta;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.freqTick;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.freqTime;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.cog;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.store;\n    /**\n     * @type {?}\n     * @private\n     */\n    CacheService.prototype.http;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cache.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass DelonCacheModule {\n}\nDelonCacheModule.decorators = [\n    { type: NgModule, args: [{},] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: cache.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CacheService, DelonCacheConfig, DelonCacheModule, DC_STORE_STORAGE_TOKEN as ɵa, DC_STORE_STORAGE_TOKEN_FACTORY as ɵb, LocalStorageCacheService as ɵc };\n//# sourceMappingURL=cache.js.map\n","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    ACL 访问控制\\n    <small\\n      >注意观察左边的菜单；ACLService提供一个完整的基于角色的访问控制的服务，若需要支持路由守卫，请配合ACLService与Route\\n      Guard配合简便实现。</small\\n    >\\n  </h1>\\n</div>\\n<div nz-row [nzGutter]=\\\"8\\\">\\n  <div nz-col [nzSpan]=\\\"24\\\">\\n    <nz-card nzTitle=\\\"按钮粒度\\\">\\n      ACL原始数据：{{ aclSrv.data | json }}\\n      <button nz-button [acl]=\\\"'role-a'\\\">role-a</button>\\n      <button nz-button [acl]=\\\"'role-b'\\\" class=\\\"ml-sm\\\">role-b</button>\\n    </nz-card>\\n  </div>\\n</div>\\n<div nz-row [nzGutter]=\\\"8\\\">\\n  <div nz-col [nzSpan]=\\\"8\\\">\\n    <nz-card nzTitle=\\\"全量\\\">\\n      <button nz-button (click)=\\\"toggleFull()\\\">\\n        <span>{{ full ? '离开' : '设置' }}权限</span>\\n      </button>\\n      <p class=\\\"pt-md\\\">全量类指系统管理员角色，无任何受限。</p>\\n    </nz-card>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"8\\\">\\n    <nz-card nzTitle=\\\"角色[role-a]\\\">\\n      <button nz-button (click)=\\\"toggleRoleA()\\\">\\n        <span>{{ roleA.length > 0 ? '离开' : '设置' }}权限</span>\\n      </button>\\n    </nz-card>\\n  </div>\\n  <div nz-col [nzSpan]=\\\"8\\\">\\n    <nz-card nzTitle=\\\"角色[role-b]\\\">\\n      <button nz-button (click)=\\\"toggleRoleB()\\\">\\n        <span>{{ roleB.length > 0 ? '离开' : '设置' }}权限</span>\\n      </button>\\n    </nz-card>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    Cache 缓存,\\n    <a href=\\\"https://ng-alain.com/components/cache\\\" target=\\\"_blank\\\">Document</a>\\n  </h1>\\n</div>\\n<nz-card nzTitle=\\\"Service\\\">\\n  <button nz-button (click)=\\\"set()\\\">设置</button>\\n  <button nz-button (click)=\\\"get()\\\" class=\\\"ml-sm\\\">获取</button>\\n</nz-card>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>Download a file</h1>\\n</div>\\n<nz-card nzTitle=\\\"DEMO\\\">\\n  <button\\n    nz-button\\n    *ngFor=\\\"let i of fileTypes\\\"\\n    class=\\\"mr-sm\\\"\\n    down-file\\n    [http-data]=\\\"data\\\"\\n    http-url=\\\"assets/tmp/demo{{ i }}\\\"\\n    file-name=\\\"demo中文\\\"\\n  >\\n    {{ i }}\\n  </button>\\n</nz-card>\\n\"","export default \"<page-header [title]=\\\"'Page Name'\\\"></page-header>\\n<nz-card>\\n  <sf\\n    mode=\\\"search\\\"\\n    [schema]=\\\"searchSchema\\\"\\n    [formData]=\\\"params\\\"\\n    (formSubmit)=\\\"st.reset($event)\\\"\\n    (formReset)=\\\"st.reset(params)\\\"\\n  ></sf>\\n  <st #st [data]=\\\"url\\\" [columns]=\\\"columns\\\" [req]=\\\"{ params: params }\\\"></st>\\n</nz-card>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    路由守卫\\n  </h1>\\n</div>\\n<nz-button-group>\\n  <button nz-button [routerLink]=\\\"['/delon/guard/leave']\\\">\\n    <span>离开确认页</span>\\n  </button>\\n</nz-button-group>\\n<nz-button-group class=\\\"ml-sm\\\">\\n  <button nz-button (click)=\\\"setRole(true)\\\">\\n    <span>设置管理员</span>\\n  </button>\\n  <button nz-button (click)=\\\"setRole('user1')\\\">\\n    <span>设置员工1</span>\\n  </button>\\n  <button nz-button (click)=\\\"setRole('user2')\\\">\\n    <span>设置员工2</span>\\n  </button>\\n</nz-button-group>\\n<nz-button-group class=\\\"ml-sm\\\">\\n  <button nz-button [routerLink]=\\\"['/delon/guard/auth']\\\">\\n    <span>需要user1</span>\\n  </button>\\n  <button nz-button [routerLink]=\\\"['/delon/guard/admin']\\\">\\n    <span>需要管理员</span>\\n  </button>\\n</nz-button-group>\\n<p class=\\\"mb-lg\\\">当前ACL信息：{{ aclSrv.data | json }}</p>\\n<router-outlet></router-outlet>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    Lodop打印\\n    <small\\n      >更多体验请至\\n      <a href=\\\"https://ng-alain.com/components/lodop\\\" target=\\\"_blank\\\">ng-alain.com</a>\\n    </small>\\n  </h1>\\n</div>\\n<nz-card>\\n  <nz-alert *ngIf=\\\"error\\\" [nzType]=\\\"'warning'\\\" [nzMessage]=\\\"message\\\">\\n    <ng-template #message>\\n      请先下载\\n      <a href=\\\"http://c-lodop.com/download.html\\\" target=\\\"_blank\\\">Lodop插件</a>。\\n    </ng-template>\\n  </nz-alert>\\n  <form *ngIf=\\\"!error\\\" nz-form>\\n    <nz-form-item nz-row>\\n      <nz-form-label nz-col [nzSm]=\\\"6\\\">打印服务器</nz-form-label>\\n      <nz-form-control nz-col [nzSm]=\\\"18\\\">\\n        <nz-input-group>\\n          <div nz-col [nzSpan]=\\\"16\\\">\\n            <input nz-input nzPlaceHolder=\\\"https://localhost:8443/CLodopfuncs.js\\\" [(ngModel)]=\\\"cog.url\\\" name=\\\"url\\\" />\\n          </div>\\n          <div nz-col [nzSpan]=\\\"8\\\">\\n            <button nz-button (click)=\\\"reload(null)\\\">重新加载打印机</button>\\n          </div>\\n        </nz-input-group>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item nz-row>\\n      <nz-form-label nz-col [nzSm]=\\\"6\\\">打印机</nz-form-label>\\n      <nz-form-control nz-col [nzSm]=\\\"18\\\">\\n        <nz-select\\n          style=\\\"width:90%;\\\"\\n          nzPlaceHolder=\\\"请选择打印机\\\"\\n          nzShowSearch\\n          nzAllowClear\\n          [(ngModel)]=\\\"cog.printer\\\"\\n          name=\\\"printer\\\"\\n          (ngModelChange)=\\\"changePinter($event)\\\"\\n        >\\n          <nz-option *ngFor=\\\"let name of pinters\\\" [nzLabel]=\\\"name\\\" [nzValue]=\\\"name\\\"> </nz-option>\\n        </nz-select>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item nz-row>\\n      <nz-form-label nz-col [nzSm]=\\\"6\\\">纸张类型</nz-form-label>\\n      <nz-form-control nz-col [nzSm]=\\\"18\\\">\\n        <nz-select\\n          style=\\\"width:90%;\\\"\\n          nzPlaceHolder=\\\"请选择纸张类型\\\"\\n          nzShowSearch\\n          nzAllowClear\\n          [(ngModel)]=\\\"cog.paper\\\"\\n          name=\\\"paper\\\"\\n        >\\n          <nz-option *ngFor=\\\"let name of papers\\\" [nzLabel]=\\\"name\\\" [nzValue]=\\\"name\\\"> </nz-option>\\n        </nz-select>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item nz-row>\\n      <nz-form-label nz-col [nzSm]=\\\"6\\\">打印内容</nz-form-label>\\n      <nz-form-control nz-col [nzSm]=\\\"18\\\">\\n        <textarea nz-input [(ngModel)]=\\\"cog.html\\\" name=\\\"html\\\" nzAutosize></textarea>\\n        <div nz-form-extra>仅限HTML，更多类型支持请参考官网</div>\\n      </nz-form-control>\\n    </nz-form-item>\\n    <nz-form-item nz-row>\\n      <nz-form-control nz-col [nzSm]=\\\"18\\\" [nzOffset]=\\\"6\\\">\\n        <button nz-button (click)=\\\"print(true)\\\" [nzLoading]=\\\"printing\\\">打印预览</button>\\n        <button nz-button (click)=\\\"print()\\\" [nzLoading]=\\\"printing\\\">直接打印</button>\\n      </nz-form-control>\\n    </nz-form-item>\\n  </form>\\n</nz-card>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    二维码\\n    <a href=\\\"//ng-alain.com/components/qr\\\" target=\\\"_blank\\\">Document</a>\\n  </h1>\\n</div>\\n<nz-card>\\n  <nz-row [nzGutter]=\\\"24\\\">\\n    <nz-col [nzSpan]=\\\"8\\\" class=\\\"text-center\\\">\\n      <qr\\n        [value]=\\\"value\\\"\\n        [background]=\\\"background\\\"\\n        [backgroundAlpha]=\\\"backgroundAlpha\\\"\\n        [foreground]=\\\"foreground\\\"\\n        [foregroundAlpha]=\\\"foregroundAlpha\\\"\\n        [level]=\\\"level\\\"\\n        [mime]=\\\"mime\\\"\\n        [padding]=\\\"padding\\\"\\n        [size]=\\\"size\\\"\\n        style=\\\"border:1px solid #999\\\"\\n      ></qr>\\n    </nz-col>\\n    <nz-col [nzSpan]=\\\"16\\\">\\n      <form nz-form>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">背景</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-input-group>\\n              <div nz-col nzSpan=\\\"12\\\">\\n                <input nz-input type=\\\"color\\\" [(ngModel)]=\\\"background\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" />\\n              </div>\\n              <div nz-col nzSpan=\\\"12\\\">\\n                <nz-input-number\\n                  [(ngModel)]=\\\"backgroundAlpha\\\"\\n                  [nzMin]=\\\"0\\\"\\n                  [nzMax]=\\\"1\\\"\\n                  [nzStep]=\\\"0.1\\\"\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                ></nz-input-number>\\n              </div>\\n            </nz-input-group>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">前景</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-input-group>\\n              <div nz-col nzSpan=\\\"12\\\">\\n                <input nz-input type=\\\"color\\\" [(ngModel)]=\\\"foreground\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" />\\n              </div>\\n              <div nz-col nzSpan=\\\"12\\\">\\n                <nz-input-number\\n                  [(ngModel)]=\\\"foregroundAlpha\\\"\\n                  [nzMin]=\\\"0\\\"\\n                  [nzMax]=\\\"1\\\"\\n                  [nzStep]=\\\"0.1\\\"\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\n                ></nz-input-number>\\n              </div>\\n            </nz-input-group>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">误差</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-select [(ngModel)]=\\\"level\\\" [ngModelOptions]=\\\"{ standalone: true }\\\">\\n              <nz-option nzValue=\\\"L\\\" nzLabel=\\\"L\\\"></nz-option>\\n              <nz-option nzValue=\\\"M\\\" nzLabel=\\\"M\\\"></nz-option>\\n              <nz-option nzValue=\\\"Q\\\" nzLabel=\\\"Q\\\"></nz-option>\\n              <nz-option nzValue=\\\"H\\\" nzLabel=\\\"H\\\"></nz-option>\\n            </nz-select>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">Mime</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-select [(ngModel)]=\\\"mime\\\" [ngModelOptions]=\\\"{ standalone: true }\\\">\\n              <nz-option nzValue=\\\"image/png\\\" nzLabel=\\\"image/png\\\"></nz-option>\\n              <nz-option nzValue=\\\"image/jpeg\\\" nzLabel=\\\"image/jpeg\\\"></nz-option>\\n              <nz-option nzValue=\\\"image/gif\\\" nzLabel=\\\"image/gif\\\"></nz-option>\\n            </nz-select>\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">内边距</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-input-number\\n              [(ngModel)]=\\\"padding\\\"\\n              [ngModelOptions]=\\\"{ standalone: true }\\\"\\n              [nzMin]=\\\"0\\\"\\n              [nzMax]=\\\"100\\\"\\n            ></nz-input-number\\n            >px\\n          </nz-form-control>\\n        </nz-form-item>\\n        <nz-form-item>\\n          <nz-form-label [nzSpan]=\\\"8\\\">大小</nz-form-label>\\n          <nz-form-control [nzSpan]=\\\"16\\\">\\n            <nz-input-number\\n              [(ngModel)]=\\\"size\\\"\\n              [ngModelOptions]=\\\"{ standalone: true }\\\"\\n              [nzMin]=\\\"100\\\"\\n              [nzMax]=\\\"1000\\\"\\n              [nzStep]=\\\"padding\\\"\\n            ></nz-input-number\\n            >px\\n          </nz-form-control>\\n        </nz-form-item>\\n      </form>\\n    </nz-col>\\n  </nz-row>\\n</nz-card>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    Fullscreen & ST\\n    <small\\n      >使用 <a href=\\\"//ng-alain.com/components/table\\\" target=\\\"_blank\\\">st</a>、\\n      <a href=\\\"//ng-alain.com/components/full-content\\\" target=\\\"_blank\\\">full-content</a> 组合，由于 nz-table\\n      固定表头暂不支持自适应，因此表格的展示的效果在响应式里面效果并不是特别好。</small\\n    >\\n  </h1>\\n</div>\\n<full-content (fullscreenChange)=\\\"fullChange($event)\\\">\\n  <nz-card>\\n    <div nz-row class=\\\"mb-md\\\">\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <form nz-form nzLayout=\\\"inline\\\" se-container>\\n          <se label=\\\"User ID\\\" labelWidth=\\\"0\\\">\\n            <input nz-input [(ngModel)]=\\\"args.userid\\\" name=\\\"userid\\\" id=\\\"userid\\\" />\\n          </se>\\n          <se>\\n            <button nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"st.load()\\\" [nzLoading]=\\\"http.loading\\\">Search</button>\\n            <button nz-button (click)=\\\"st.load({ _allow_anonymous: true })\\\" [disabled]=\\\"http.loading\\\">Clear</button>\\n          </se>\\n        </form>\\n      </div>\\n      <div nz-col nzSpan=\\\"12\\\">\\n        <div class=\\\"text-right\\\">\\n          <button nz-button nz-dropdown [nzDropdownMenu]=\\\"exportMenu\\\">\\n            <span>Export</span>\\n            <i nz-icon nzType=\\\"down\\\"></i>\\n          </button>\\n          <nz-dropdown-menu #exportMenu=\\\"nzDropdownMenu\\\">\\n            <ul nz-menu>\\n              <li nz-menu-item>Excel</li>\\n              <li nz-menu-item>JSON</li>\\n              <li nz-menu-item>PNG</li>\\n            </ul>\\n          </nz-dropdown-menu>\\n          <button nz-button [nzType]=\\\"'default'\\\" full-toggle class=\\\"ml-sm\\\">Full</button>\\n        </div>\\n      </div>\\n    </div>\\n    <st\\n      #st\\n      [data]=\\\"url\\\"\\n      [req]=\\\"{ params: args }\\\"\\n      [res]=\\\"{ reName: { list: 'results' } }\\\"\\n      [total]=\\\"total\\\"\\n      [ps]=\\\"ps\\\"\\n      [columns]=\\\"columns\\\"\\n      [scroll]=\\\"scroll\\\"\\n    >\\n      <ng-template st-row=\\\"events\\\" let-item let-index=\\\"index\\\">\\n        <g2-mini-bar\\n          height=\\\"15\\\"\\n          theme=\\\"mini\\\"\\n          color=\\\"#999\\\"\\n          borderWidth=\\\"3\\\"\\n          [padding]=\\\"[0, 0, 0, 0]\\\"\\n          [data]=\\\"events\\\"\\n          tooltipType=\\\"mini\\\"\\n        ></g2-mini-bar>\\n      </ng-template>\\n    </st>\\n  </nz-card>\\n</full-content>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    工具集\\n    <small>@delon/util 日常用法。</small>\\n  </h1>\\n</div>\\n<nz-row [nzGutter]=\\\"16\\\">\\n  <nz-col [nzSpan]=\\\"12\\\">\\n    <nz-card nzTitle=\\\"字符串类\\\">\\n      <nz-card nzType=\\\"inner\\\" nzTitle=\\\"format\\\">\\n        <form nz-form>\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"8\\\">String</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"16\\\">\\n              <input nz-input [(ngModel)]=\\\"format_str\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"8\\\">Object</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"16\\\">\\n              <input nz-input [(ngModel)]=\\\"format_obj\\\" [ngModelOptions]=\\\"{ standalone: true }\\\" />\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-control [nzSpan]=\\\"16\\\" [nzOffset]=\\\"8\\\">\\n              <button (click)=\\\"onFormat()\\\" nz-button>Run</button>\\n            </nz-form-control>\\n          </nz-form-item>\\n          <nz-form-item>\\n            <nz-form-label [nzSm]=\\\"8\\\">Result</nz-form-label>\\n            <nz-form-control [nzSm]=\\\"16\\\">\\n              {{ format_res }}\\n            </nz-form-control>\\n          </nz-form-item>\\n        </form>\\n      </nz-card>\\n      <nz-card nzType=\\\"inner\\\" nzTitle=\\\"yuan\\\">\\n        <nz-row [nzGutter]=\\\"16\\\">\\n          <nz-col [nzSpan]=\\\"12\\\">\\n            <input type=\\\"number\\\" nz-input [(ngModel)]=\\\"yuan_str\\\" (ngModelChange)=\\\"onYuan($event)\\\" />\\n          </nz-col>\\n          <nz-col [nzSpan]=\\\"12\\\">\\n            <div [innerHTML]=\\\"yuan_res\\\"></div>\\n          </nz-col>\\n        </nz-row>\\n      </nz-card>\\n    </nz-card>\\n  </nz-col>\\n  <nz-col [nzSpan]=\\\"12\\\">\\n    <nz-card nzTitle=\\\"其它类\\\">\\n      <button nz-button (click)=\\\"onCopy()\\\">Copy</button>\\n    </nz-card>\\n  </nz-col>\\n</nz-row>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    Import & Export excel file,\\n    <a href=\\\"//ng-alain.com/components/xlsx\\\" target=\\\"_blank\\\">Document</a>\\n  </h1>\\n</div>\\n<nz-card nzTitle=\\\"Import\\\">\\n  <button nz-button (click)=\\\"url()\\\">Via Url</button>\\n  <input type=\\\"file\\\" (change)=\\\"change($event)\\\" multiple=\\\"false\\\" class=\\\"ml-sm\\\" />\\n  <p class=\\\"mt-sm\\\">result: {{ data | json }}</p>\\n</nz-card>\\n<nz-card nzTitle=\\\"Export\\\">\\n  <button nz-button (click)=\\\"download()\\\">Export</button>\\n  <st [data]=\\\"users\\\" [ps]=\\\"3\\\" [columns]=\\\"columns\\\" class=\\\"mt-sm\\\"></st>\\n</nz-card>\\n\"","export default \"<div class=\\\"alain-default__content-title\\\">\\n  <h1>\\n    Read & Write zip file,\\n    <a href=\\\"//ng-alain.com/components/zip\\\" target=\\\"_blank\\\">Document</a>\\n  </h1>\\n</div>\\n<nz-card nzTitle=\\\"解压\\\">\\n  <button nz-button (click)=\\\"url()\\\">Via Url</button>\\n  <input type=\\\"file\\\" (change)=\\\"change($event)\\\" multiple=\\\"false\\\" class=\\\"ml-sm\\\" />\\n  <ol>\\n    <li *ngFor=\\\"let i of list\\\">{{ i | json }}</li>\\n  </ol>\\n</nz-card>\\n<nz-card nzTitle=\\\"压缩\\\" *ngIf=\\\"instance\\\">\\n  <button nz-button (click)=\\\"data.push({})\\\" [nzType]=\\\"'primary'\\\">new</button>\\n  <button nz-button (click)=\\\"download()\\\" class=\\\"ml-sm\\\">download</button>\\n  <nz-table [nzData]=\\\"data\\\" [nzFrontPagination]=\\\"false\\\" [nzShowPagination]=\\\"false\\\" class=\\\"mt-sm\\\">\\n    <thead>\\n      <tr>\\n        <th>\\n          <span>path</span>\\n        </th>\\n        <th>\\n          <span>url</span>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let i of data; let index = index\\\">\\n        <td>\\n          <input nz-input [(ngModel)]=\\\"i.path\\\" name=\\\"path{{ index }}\\\" />\\n        </td>\\n        <td>\\n          <input nz-input [(ngModel)]=\\\"i.url\\\" name=\\\"url{{ index }}\\\" />\\n        </td>\\n      </tr>\\n    </tbody>\\n  </nz-table>\\n</nz-card>\\n\"","import { Component } from '@angular/core';\nimport { ACLService } from '@delon/acl';\nimport { MenuService } from '@delon/theme';\n\n@Component({\n  selector: 'app-acl',\n  templateUrl: './acl.component.html',\n})\nexport class ACLComponent {\n  full = true;\n  roleA = '';\n  roleB = '';\n\n  constructor(public aclSrv: ACLService, private menuSrv: MenuService) {}\n\n  private reMenu() {\n    this.menuSrv.resume();\n  }\n\n  toggleFull() {\n    this.full = !this.full;\n    this.aclSrv.setFull(this.full);\n    this.reMenu();\n  }\n\n  toggleRoleA() {\n    this.full = false;\n    this.roleA = this.roleA === 'role-a' ? '' : 'role-a';\n    this.aclSrv.setFull(this.full);\n    this.aclSrv.setRole([this.roleA]);\n    this.reMenu();\n  }\n\n  toggleRoleB() {\n    this.full = false;\n    this.roleB = this.roleB === 'role-b' ? '' : 'role-b';\n    this.aclSrv.setFull(this.full);\n    this.aclSrv.setRole([this.roleB]);\n    this.reMenu();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { CacheService } from '@delon/cache';\n\n@Component({\n  selector: 'app-cache',\n  templateUrl: './cache.component.html',\n  styles: [],\n})\nexport class CacheComponent implements OnInit {\n  KEY = 'user';\n\n  constructor(public cache: CacheService, public msg: NzMessageService) {}\n\n  ngOnInit() {}\n\n  set() {\n    this.cache.set(this.KEY, +new Date());\n  }\n\n  get() {\n    this.msg.success(this.cache.getNone(this.KEY));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ACLGuard } from '@delon/acl';\n\nimport { STDemoComponent } from './st/st.component';\nimport { UtilComponent } from './util/util.component';\nimport { PrintComponent } from './print/print.component';\nimport { ACLComponent } from './acl/acl.component';\nimport { GuardComponent } from './guard/guard.component';\nimport { GuardLeaveComponent } from './guard/leave.component';\nimport { GuardAuthComponent } from './guard/auth.component';\nimport { GuardAdminComponent } from './guard/admin.component';\nimport { CanLeaveProvide } from './guard/can-leave.provide';\nimport { CacheComponent } from './cache/cache.component';\nimport { DownFileComponent } from './downfile/downfile.component';\nimport { XlsxComponent } from './xlsx/xlsx.component';\nimport { ZipComponent } from './zip/zip.component';\nimport { DelonFormComponent } from './form/form.component';\nimport { QRComponent } from './qr/qr.component';\n\nconst routes: Routes = [\n  { path: 'st', component: STDemoComponent },\n  { path: 'util', component: UtilComponent },\n  { path: 'print', component: PrintComponent },\n  { path: 'acl', component: ACLComponent },\n  {\n    path: 'guard',\n    component: GuardComponent,\n    children: [\n      {\n        path: 'leave',\n        component: GuardLeaveComponent,\n        canDeactivate: [CanLeaveProvide],\n      },\n      {\n        path: 'auth',\n        component: GuardAuthComponent,\n        canActivate: [ACLGuard],\n        data: { guard: 'user1' },\n      },\n      {\n        path: 'admin',\n        component: GuardAdminComponent,\n        canActivate: [ACLGuard],\n        data: { guard: 'admin' },\n      },\n    ],\n  },\n  { path: 'cache', component: CacheComponent },\n  { path: 'qr', component: QRComponent },\n  { path: 'downfile', component: DownFileComponent },\n  { path: 'xlsx', component: XlsxComponent },\n  { path: 'zip', component: ZipComponent },\n  { path: 'form', component: DelonFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DelonRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@shared';\n\nimport { DelonRoutingModule } from './delon-routing.module';\n\nimport { STDemoComponent } from './st/st.component';\nimport { UtilComponent } from './util/util.component';\nimport { PrintComponent } from './print/print.component';\nimport { ACLComponent } from './acl/acl.component';\nimport { CanLeaveProvide } from './guard/can-leave.provide';\nimport { GuardComponent } from './guard/guard.component';\nimport { GuardLeaveComponent } from './guard/leave.component';\nimport { GuardAdminComponent } from './guard/admin.component';\nimport { GuardAuthComponent } from './guard/auth.component';\nimport { CacheComponent } from './cache/cache.component';\nimport { DownFileComponent } from './downfile/downfile.component';\nimport { XlsxComponent } from './xlsx/xlsx.component';\nimport { ZipComponent } from './zip/zip.component';\nimport { DelonFormComponent } from './form/form.component';\nimport { QRComponent } from './qr/qr.component';\n\nconst COMPONENTS = [\n  STDemoComponent,\n  UtilComponent,\n  PrintComponent,\n  ACLComponent,\n  GuardComponent,\n  GuardLeaveComponent,\n  GuardAdminComponent,\n  GuardAuthComponent,\n  CacheComponent,\n  DownFileComponent,\n  XlsxComponent,\n  ZipComponent,\n  DelonFormComponent,\n  QRComponent,\n];\n\nconst COMPONENTS_NOROUNT = [];\n\n@NgModule({\n  imports: [CommonModule, SharedModule, DelonRoutingModule],\n  providers: [CanLeaveProvide],\n  declarations: [...COMPONENTS, ...COMPONENTS_NOROUNT],\n  entryComponents: COMPONENTS_NOROUNT,\n})\nexport class DelonModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-down-file',\n  templateUrl: './downfile.component.html',\n})\nexport class DownFileComponent {\n  fileTypes = ['.xlsx', '.docx', '.pptx', '.pdf'];\n\n  data = {\n    otherdata: 1,\n    time: new Date(),\n  };\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { _HttpClient } from '@delon/theme';\nimport { STColumn, STComponent } from '@delon/abc';\nimport { SFSchema } from '@delon/form';\n\n@Component({\n  selector: 'app-delon-form',\n  templateUrl: './form.component.html',\n})\nexport class DelonFormComponent implements OnInit {\n  params: any = {};\n  url = `/user`;\n  @ViewChild('st', { static: true })\n  st: STComponent;\n  searchSchema: SFSchema = {\n    properties: {\n      no: {\n        type: 'string',\n        title: '编号',\n      },\n    },\n  };\n  columns: STColumn[] = [\n    { title: '编号', index: 'no' },\n    { title: '调用次数', type: 'number', index: 'callNo' },\n    { title: '头像', type: 'img', width: '50px', index: 'avatar' },\n    { title: '时间', type: 'date', index: 'updatedAt' },\n  ];\n\n  constructor(private http: _HttpClient) {}\n\n  ngOnInit() {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guard-admin',\n  template: `\n    <p>这是一个admin页面</p>\n  `,\n})\nexport class GuardAdminComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guard-auth',\n  template: `\n    <p>这是一个user1页面</p>\n  `,\n})\nexport class GuardAuthComponent {}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { GuardComponent } from './guard.component';\nimport { Observable } from 'rxjs';\nimport { NzModalService } from 'ng-zorro-antd';\n\n@Injectable()\nexport class CanLeaveProvide implements CanDeactivate<GuardComponent> {\n  constructor(private confirmSrv: NzModalService) {}\n\n  canDeactivate(\n    component: GuardComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot,\n  ): boolean | Observable<boolean> | Promise<boolean> {\n    return new Observable(observer => {\n      this.confirmSrv.confirm({\n        nzTitle: '确认要离开吗？',\n        nzContent: '你已经填写了部分表单离开会放弃已经填写的内容。',\n        nzOkText: '离开',\n        nzCancelText: '取消',\n        nzOnOk: () => {\n          observer.next(true);\n          observer.complete();\n        },\n        nzOnCancel: () => {\n          observer.next(false);\n          observer.complete();\n        },\n      });\n    });\n  }\n}\n","import { MenuService } from '@delon/theme';\nimport { Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { ACLService } from '@delon/acl';\n\n@Component({\n  selector: 'app-guard',\n  templateUrl: './guard.component.html',\n})\nexport class GuardComponent {\n  constructor(public aclSrv: ACLService, private menuSrv: MenuService, private router: Router) {}\n\n  setRole(value: string | boolean) {\n    this.aclSrv.setFull(typeof value === 'boolean' ? value : false);\n    this.aclSrv.set({ role: [value as string] });\n    this.menuSrv.resume();\n    this.router.navigate(['/delon/guard']);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guard-leave',\n  template: `\n    <p>离开时需要确认</p>\n    <button nz-button [nzType]=\"'primary'\" [routerLink]=\"['/logics/guard']\">\n      <span>我要离开</span>\n    </button>\n  `,\n})\nexport class GuardLeaveComponent {}\n","import { Component } from '@angular/core';\nimport { NzMessageService, NzNotificationService } from 'ng-zorro-antd';\nimport { Lodop, LodopService } from '@delon/abc';\n\n@Component({\n  selector: 'app-print',\n  templateUrl: './print.component.html',\n})\nexport class PrintComponent {\n  constructor(public lodopSrv: LodopService, private msg: NzMessageService, private notify: NzNotificationService) {\n    this.lodopSrv.lodop.subscribe(({ lodop, ok }) => {\n      if (!ok) {\n        this.error = true;\n        return;\n      }\n      this.error = false;\n      this.msg.success(`打印机加载成功`);\n      this.lodop = lodop as Lodop;\n      this.pinters = this.lodopSrv.printer;\n    });\n  }\n  cog: any = {\n    url: 'https://localhost:8443/CLodopfuncs.js',\n    printer: '',\n    paper: '',\n    html: `\n      <h1>Title</h1>\n      <p>这~！@#￥%……&*（）——sdilfjnvn</p>\n      <p>这~！@#￥%……&*（）——sdilfjnvn</p>\n      <p>这~！@#￥%……&*（）——sdilfjnvn</p>\n      <p>这~！@#￥%……&*（）——sdilfjnvn</p>\n      <p>这~！@#￥%……&*（）——sdilfjnvn</p>\n    `,\n  };\n  error = false;\n  lodop: Lodop | null = null;\n  pinters: any[] = [];\n  papers: string[] = [];\n\n  printing = false;\n\n  reload(options: any = { url: 'https://localhost:8443/CLodopfuncs.js' }) {\n    this.pinters = [];\n    this.papers = [];\n    this.cog.printer = '';\n    this.cog.paper = '';\n\n    this.lodopSrv.cog = { ...this.cog, ...options };\n    this.error = false;\n    if (options === null) this.lodopSrv.reset();\n  }\n\n  changePinter(name: string) {\n    this.papers = this.lodop!.GET_PAGESIZES_LIST(name, '\\n').split('\\n');\n  }\n  print(isPrivew = false) {\n    const LODOP = this.lodop as Lodop;\n    LODOP.PRINT_INITA(10, 20, 810, 610, '测试C-Lodop远程打印四步骤');\n    LODOP.SET_PRINTER_INDEXA(this.cog.printer);\n    LODOP.SET_PRINT_PAGESIZE(0, 0, 0, this.cog.paper);\n    LODOP.ADD_PRINT_TEXT(1, 1, 300, 200, '下面输出的是本页源代码及其展现效果：');\n    LODOP.ADD_PRINT_TEXT(20, 10, '90%', '95%', this.cog.html);\n    LODOP.SET_PRINT_STYLEA(0, 'ItemType', 4);\n    LODOP.NewPageA();\n    LODOP.ADD_PRINT_HTM(20, 10, '90%', '95%', this.cog.html);\n    if (isPrivew) LODOP.PREVIEW();\n    else LODOP.PRINT();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-qr',\n  templateUrl: './qr.component.html',\n})\nexport class QRComponent {\n  value = 'https://ng-alain.com/';\n  background = 'white';\n  backgroundAlpha = 1.0;\n  foreground = 'black';\n  foregroundAlpha = 1.0;\n  level = 'L';\n  mime = 'image/png';\n  padding = 10;\n  size = 220;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { STColumn } from '@delon/abc';\nimport { _HttpClient } from '@delon/theme';\n\n@Component({\n  selector: 'app-st',\n  templateUrl: './st.component.html',\n})\nexport class STDemoComponent implements OnInit {\n  ps = 20;\n  total = 200; // mock total\n  args: any = { _allow_anonymous: true };\n  url = `https://api.randomuser.me/?results=20`;\n  events: any[] = [];\n  scroll = { y: '230px' };\n  columns: STColumn[] = [\n    { title: 'id', index: 'id.value', type: 'checkbox' },\n    { title: 'Avatar', index: 'picture.thumbnail', type: 'img', width: 80 },\n    {\n      title: 'Name',\n      index: 'name.first',\n      width: 150,\n      format: item => `${item.name.first} ${item.name.last}`,\n      type: 'link',\n      click: item => this.message.info(`${item.name.first}`),\n    },\n    { title: 'Email', index: 'email' },\n    {\n      title: 'Gender',\n      index: 'gender',\n      type: 'yn',\n      yn: {\n        truth: 'female',\n        yes: '男',\n        no: '女',\n        mode: 'text',\n      },\n      width: 120,\n    },\n    { title: 'Events', render: 'events', width: 90 },\n    { title: 'Registered', index: 'registered.date', type: 'date', width: 170 },\n    {\n      title: 'Actions',\n      width: 120,\n      buttons: [\n        {\n          text: 'Edit',\n          click: item => this.message.info(`edit [${item.id.value}]`),\n          if: item => item.gender === 'female',\n        },\n        {\n          text: 'Delete',\n          type: 'del',\n          click: item => this.message.info(`deleted [${item.id.value}]`),\n        },\n      ],\n    },\n  ];\n\n  constructor(public http: _HttpClient, private message: NzMessageService) {}\n\n  ngOnInit(): void {\n    this.http.get('/chart/visit').subscribe((res: any[]) => (this.events = res.slice(0, 8)));\n  }\n\n  fullChange(val: boolean) {\n    this.scroll = val ? { y: '350px' } : { y: '230px' };\n  }\n}\n","import { Component } from '@angular/core';\nimport { NzMessageService } from 'ng-zorro-antd';\nimport { copy, format } from '@delon/util';\nimport { yuan } from '@shared';\n\n@Component({\n  selector: 'app-util',\n  templateUrl: './util.component.html',\n})\nexport class UtilComponent {\n  constructor(public messageSrv: NzMessageService) {}\n\n  // region: string\n\n  // tslint:disable-next-line: no-invalid-template-strings\n  format_str = 'this is ${name}';\n  format_res = '';\n  format_obj = JSON.stringify({ name: 'asdf' });\n\n  // yuan\n  yuan_str: any;\n  yuan_res: string;\n\n  // endregion\n\n  // region: other\n\n  content = `time ${+new Date()}\n\n    中文！@#￥%……&*`;\n  onFormat() {\n    let obj = null;\n    try {\n      obj = JSON.parse(this.format_obj);\n    } catch {\n      this.messageSrv.error(`无法使用 JSON.parse 转换`);\n      return;\n    }\n    this.format_res = format(this.format_str, obj, true);\n  }\n  onYuan(value: string) {\n    this.yuan_res = yuan(value);\n  }\n  onCopy() {\n    copy(`time ${+new Date()}`).then(() => this.messageSrv.success(`success`));\n  }\n\n  // endregion\n}\n","import { Component, OnInit } from '@angular/core';\nimport { XlsxService, STColumn } from '@delon/abc';\n\n@Component({\n  selector: 'app-xlsx',\n  templateUrl: './xlsx.component.html',\n})\nexport class XlsxComponent {\n  constructor(private xlsx: XlsxService) {}\n  data: any;\n\n  users: any[] = Array(100)\n    .fill({})\n    .map((item: any, idx: number) => {\n      return {\n        id: idx + 1,\n        name: `name ${idx + 1}`,\n        age: Math.ceil(Math.random() * 10) + 20,\n      };\n    });\n\n  columns: STColumn[] = [\n    { title: '编号', index: 'id', type: 'checkbox' },\n    { title: '姓名', index: 'name' },\n    { title: '年龄', index: 'age' },\n  ];\n  url() {\n    this.xlsx.import(`./assets/tmp/demo.xlsx`).then(res => (this.data = res));\n  }\n\n  change(e: Event) {\n    const file = (e.target as HTMLInputElement).files![0];\n    this.xlsx.import(file).then(res => (this.data = res));\n  }\n\n  download() {\n    const data = [this.columns.map(i => i.title)];\n    this.users.forEach(i => data.push(this.columns.map(c => i[c.index as string])));\n    this.xlsx.export({\n      sheets: [\n        {\n          data,\n          name: 'sheet name',\n        },\n      ],\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ZipService } from '@delon/abc';\nimport * as JSZip from 'jszip';\nimport { NzMessageService } from 'ng-zorro-antd';\n\n@Component({\n  selector: 'app-zip',\n  templateUrl: './zip.component.html',\n})\nexport class ZipComponent {\n  constructor(private zip: ZipService, private msg: NzMessageService) {\n    this.zip.create().then(ret => (this.instance = ret));\n  }\n\n  // region: read\n\n  list: any;\n\n  // endregion\n\n  // region: write\n\n  instance: JSZip | null = null;\n  data: { path: string; url: string }[] = [\n    { path: 'demo.docx', url: 'https://ng-alain.com/assets/demo.docx' },\n    {\n      path: '小程序标志.zip',\n      url: 'https://wximg.gtimg.com/shake_tv/mina/standard_logo.zip',\n    },\n  ];\n  private format(data: any) {\n    const files = data.files;\n    this.list = Object.keys(files).map(key => {\n      return {\n        name: key,\n        dir: files[key].dir,\n        date: files[key].date,\n      };\n    });\n  }\n\n  url() {\n    this.zip.read(`./assets/tmp/demo.zip`).then(res => this.format(res));\n  }\n\n  change(e: Event) {\n    const file = (e.target as HTMLInputElement).files![0];\n    this.zip.read(file).then(res => this.format(res));\n  }\n\n  download() {\n    const promises: Promise<any>[] = [];\n    this.data.forEach(item => {\n      promises.push(this.zip.pushUrl(this.instance, item.path, item.url));\n    });\n    Promise.all(promises).then(\n      () => {\n        this.zip.save(this.instance).then(() => {\n          this.msg.success('download success');\n          this.data = [];\n        });\n      },\n      (error: any) => {\n        console.warn(error);\n        this.msg.error(JSON.stringify(error));\n      },\n    );\n  }\n\n  // endregion\n}\n"],"sourceRoot":"webpack:///","file":"delon-delon-module-es5.js"}